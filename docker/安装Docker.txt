
# 更新系统，确保软件包列表的有效性
gswewf@gswewf-pc:~$ sudo apt-get update
# 如果Ubuntu的版本不满足，还需升级Ubuntu
# apt-get -y upgrade
upgrade 是升级已安装的所有软件包，升级之后的版本就是本地索引里的，因此，在执行 upgrade 之前一定要执行 update, 这样才能是最新的。

# 安装docker
gswewf@gswewf-pc:~$ sudo apt-get install docker.io 
或者： sudo apt-get install docker-ce
Created symlink from /etc/systemd/system/sockets.target.wants/docker.socket to /lib/systemd/system/docker.socket.
正在处理用于 systemd (229-4) 的触发器 ...

# 或者直接下载安装文件进行安装：
ubuntu@10-13-109-255:~$ sudo curl -fsSLO https://get.docker.com/builds/Linux/x86_64/docker-17.05.0-ce.tgz 
ubuntu@10-13-109-255:~$ sudo tar --strip-components=1 -xvzf docker-17.05.0-ce.tgz -C /usr/local/bin
以守护进程进行运行：/usr/local/bin/dockerd

用户组和配置文件修改
把当前用户加入到docker用户组中
gswewf@gswewf-pc:~$ sudo usermod -a -G docker $USER

# 将当前用户从docker用户组删除：
zy@ubuntu:~$ sudo gpasswd -d $USER docker

添加配置文件
gswewf@gswewf-pc:~$ sudo vim /etc/default/docker
在配置文件中添加或修改
DOCKER="/usr/bin/docker"
OPTIONS=--graph="/data/docker" --selinux-enabled -H fd://
重启docker
gswewf@gswewf-pc:~$ sudo service docker restart

查看版本：
gswewf@gswewf-pc:~$ docker -v
Docker version 1.13.0, build 49bf474

查看状态：
gswewf@gswewf-pc:~$ sudo service docker status

# 启动指定id的容器：
gswewf@gswewf-pc:~$ sudo docker start d42fe5599730

其他状态命令：
sudo service docker start    #启动 
sudo service docker stop    #关闭 
sudo service docker restart #重启 

# 自动重启容器
$ sudo docker run --restart=always --name my_container -d ubuntu /bin/bash
--restart 标志会检查容器的退出代码，并据此来决定是否要重启容器，默认是不会重启。
--restart的参数说明
always：无论容器的退出代码是什么，Docker都会自动重启该容器。
on-failure：只有当容器的退出代码为非0值的时候才会自动重启。
另外，该参数还接受一个可选的重启次数参数，`--restart=on-fialure:5`表示当容器退出代码为非0时，Docker会尝试自动重启该容器，最多5次。
注意：自动重启容器，只有在docker服务设置了开机启动后才有效；

# 让docker服务开机启动：
ubuntu 15 及以上可通过下面方法设置开机启动docker
zy@ubuntu:~$ cat /etc/issue
Ubuntu 16.04.2 LTS \n \l
zy@ubuntu:~$ sudo systemctl enable docker

# 低版本的ubuntu只能通过下面方法设置开机启动
ubuntu@10-13-70-173:~$ cat /etc/issue
Ubuntu 14.04.5 LTS \n \l
ubuntu@10-13-70-173:~$ sudo systemctl enable docker
sudo: systemctl: command not found
ubuntu@10-13-70-173:~$ sudo update-rc.d docker defaults

# 有时候pull镜像时，一直都是timeout，这时可采用国内的镜像：
gswewf@gswewf-pc:~$ echo "DOCKER_OPTS="$DOCKER_OPTS --registry-mirror=http://f2d6cb40.m.daocloud.io"" | sudo tee -a /etc/default/docker
# 重启docker
gswewf@gswewf-pc:~$ sudo service docker restart
或者：
gswewf@gswewf-pc:~$ systemctl restart docker

# 继续拉取neo4j
gswewf@gswewf-pc:~$ sudo docker pull neo4j

# docker-compose的安装：
gswewf@gswewf-pc:~$ sudo pip3 install -U docker-compose

docker-compose是为了部署应用。一般情况需要docker run image1、docker run image2...一次一次不厌其烦的重复这些操作，每次都写大量的命令参数。
Compose简化了这个流程，只需要把这些内容固化到docker-compose.yml中。

# 查看安装的docker-compose的版本： 
gswewf@gswewf-pc:~$ docker-compose --version
docker-compose version 1.14.0, build c7bdf9e

# docker官方仓库,https://hub.docker.com,可搜索想要的软件,再拉取即可，如`redis`:
gswewf@gswewf-pc:~$ sudo docker pull redis

# 安装docker-machine：
# 下载最新版本的Docker Machine并将docker-machine文件放到了/usr/local/bin/后，添加执行权限即可：
# 安装命令可在页面`https://github.com/docker/machine/releases/`查到；
gswewf@gswewf-pc:~$ curl -L https://github.com/docker/machine/releases/download/v0.12.0-rc2/docker-machine-`uname -s`-`uname -m` >/tmp/docker-machine &&   chmod +x /tmp/docker-machine &&  sudo cp /tmp/docker-machine /usr/local/bin/docker-machine

# 查看docker-machine的安装版本：
gswewf@gswewf-pc:~$ docker-machine -v
docker-machine version 0.12.0-rc2, build 64fa459

# 查看当前的machine：
gswewf@gswewf-pc:~$ docker-machine ls
NAME   ACTIVE   DRIVER   STATE   URL   SWARM   DOCKER   ERRORS

# 创建一个docker machine：
gswewf@gswewf-pc:~$ docker-machine create -d virtualbox default
Creating CA: /home/gswewf/.docker/machine/certs/ca.pem
Creating client certificate: /home/gswewf/.docker/machine/certs/cert.pem
Running pre-create checks...
Error with pre-create check: "VBoxManage not found. Make sure VirtualBox is installed and VBoxManage is in the path"
gswewf@gswewf-pc:~$ sudo apt-get install -y virtualbox-qt
# 重新执行：
gswewf@gswewf-pc:~$ docker-machine create -d virtualbox default

