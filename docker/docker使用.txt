
# 可以通过参数`--detach=false`，那么容器将会运行在后台模式。

gswewf@gswewf-pc:~$ sudo docker run \
>     --detach \
>     --publish=17474:7474 --publish=17687:7687 \
>     --volume=$HOME/neo4j/data:/data \
>     --volume=$HOME/neo4j/logs:/logs \
>     --volume=$HOME/neo4j/conf:/conf \
>     neo4j:3.2
Unable to find image 'neo4j:3.2' locally
3.2: Pulling from library/neo4j
Digest: sha256:a924fd66ed70b546676067b3797c07214b97a33db4696ce9b4966047c1e404ff
Status: Downloaded newer image for neo4j:3.2
2432a632b19f921c4f92f1e73a0c197ee4228b997fa3804bdd5dc545c9b32345

# docker即在后台运行了，查看正在运行的容器：
gswewf@gswewf-pc:~$ sudo docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                                        NAMES
2432a632b19f        neo4j:3.2           "/docker-entrypoin..."   7 minutes ago       Up 7 minutes        7473/tcp, 0.0.0.0:17474->7474/tcp, 0.0.0.0:17687->7687/tcp   inspiring_stonebraker

# 查看所有的容器，包括已经停止的。
gswewf@gswewf-pc:~$ sudo docker ps -a

# 可以通过`--name`参数为启动的容器命名：
gswewf@gswewf-pc:~$ sudo docker run   --detach  --name=neo4j17474 --publish=17474:7474 --publish=17687:7687    --volume=$HOME/neo4j/data:/data  --volume=$HOME/neo4j/logs:/logs  --volume=$HOME/neo4j/conf:/conf  neo4j:3.2
87551d79de66f14b74009128cfc79163b94d23b4ace6f2fb53bff2fa21a84b4c
gswewf@gswewf-pc:~$ sudo docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                                      NAMES
87551d79de66        neo4j:3.2           "/docker-entrypoin..."   14 seconds ago      Up 12 seconds       0.0.0.0:7474->7474/tcp, 7473/tcp, 0.0.0.0:7687->7687/tcp   neo4j17474


删除容器id为`a70d3901c981`的容器：
gswewf@gswewf-pc:~$ sudo docker rm a70d3901c981

# 删除容器名为`peaceful_haibt`的容器：
gswewf@gswewf-pc:~$ sudo docker rm peaceful_haibt

# 删除所有容器
gswewf@gswewf-pc:~$ sudo docker rm $(sudo docker ps -a -q)

# 删除单个容器
docker rm <容器名orID>

# 停止、启动、杀死一个容器
docker stop <容器名orID>
docker start <容器名orID>
docker kill <容器名orID>

# 删除单个镜像：
命令格式：docker  rmi   image_name/ID
若要删除所有的image, 使用命令：docker rmi  $( docker  images -q )

查看Docker Hub 上面的镜像`gswyhq/ner`有哪些tag:
curl 'https://registry.hub.docker.com/v2/repositories/gswyhq/ner/tags/'|jq '."results"[]["name"]'
"bilstm_20190929_2136"
"bilstm_20190922_2136"
"bilstm_20190916_2136"

# 删除 Docker Hub 上面的镜像：
export USERNAME=myuser
export PASSWORD=mypass
export ORGANIZATION=myorg (如果是个人，则为您的用户名)
export REPOSITORY=myrepo
export TAG=latest

curl -u $USERNAME:$PASSWORD -X "DELETE" https://cloud.docker.com/v2/repositories/$ORGANIZATION/$REPOSITORY/tags/$TAG/

如本地删除
docker rmi gswyhq/ner:bilstm_20190929_2136
docker hub 删除远程仓库docker镜像tag
curl -u $USERNAME:$PASSWORD -X "DELETE" https://cloud.docker.com/v2/repositories/gswyhq/ner/tags/bilstm_20190929_2136/

注意：运行导入的镜像的时候必须带command，否则启动报如下错误
FATA[0000] Error response from daemon: No command specified  
具体的command需要在导出容器的时候通过docker ps查看到。

# 查询容器id为`d42fe5599730`的详细信息,也可以查询到command：
gswewf@gswewf-pc:~$ sudo docker inspect d42fe5599730

# 重命名容器：
zy@ubuntu:~/nwd$ sudo docker ps
[sudo] password for zy: 
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                                      NAMES
bf1bbe3e0fbf        neo4j               "/docker-entrypoint.s"   25 hours ago        Up 25 hours         0.0.0.0:7474->7474/tcp, 7473/tcp, 0.0.0.0:7687->7687/tcp   cocky_cori
zy@ubuntu:~/nwd$ sudo docker rename cocky_cori nwd7474
zy@ubuntu:~/nwd$ sudo docker ps
CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                                                      NAMES
bf1bbe3e0fbf        neo4j               "/docker-entrypoint.s"   25 hours ago        Up 25 hours         0.0.0.0:7474->7474/tcp, 7473/tcp, 0.0.0.0:7687->7687/tcp   nwd7474

# 进入正在运行的容器id 为`bf1bbe3e0fbf`的容器：
zy@ubuntu:~$ sudo docker exec -it bf1bbe3e0fbf /bin/bash
bash-4.3# 

# 查看容器的标准输出：
gswewf@gswewf-pc:~$ docker logs -f ubuntu-yhb 

# 查看容器的进程：
gswewf@gswewf-pc:~$ docker top ubuntu-yhb 

# 查看容器的配置：
gswewf@gswewf-pc:~$ docker inspect ubuntu-yhb

# 拉取指定镜像：
docker pull 899150993273.dkr.ecr.cn-north-1.amazonaws.com.cn/nlp@sha256:9dd2acf3e3f0e1763ec0d91c6cdcb260162e62e460a151d47b647b4150da2ed1

# 进入docker 使用root用户的方式
$ docker run --rm -it --user root rhel7.4-base:0.2 /bin/bash
