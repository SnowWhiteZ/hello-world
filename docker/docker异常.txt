
ubuntu@10-13-109-255:~$ sudo docker ps
如果不跟 sudo，直接执行 docker ps 命令会有如下问题：
ubuntu@10-13-109-255:~$ docker ps
FATA[0000] Get http:///var/run/docker.sock/v1.18/containers/json: dial unix /var/run/docker.sock: permission denied. Are you trying to connect to a TLS-enabled daemon without TLS? 

# 免 sudo 使用 docker
第一步：如果还没有 docker group 就添加一个：
sudo groupadd docker
第二步：将用户加入该 group 内。然后退出并重新登录就生效啦。
sudo gpasswd -a ${USER} docker
第三步：重启 docker 服务
sudo service docker restart
第四步：然后退出并重新登录就生效
切换当前会话到新 group 或者重启 X 会话
gswewf@gswewf-pc:/var/run$ newgrp - docker
gswewf@gswewf-pc:~$ docker ps
CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES

注意，最后一步是必须的，否则因为 groups 命令获取到的是缓存的组信息，刚添加的组信息未能生效，所以 docker images 执行时同样有错。

# docker服务未启动报错：
ubuntu@10-13-109-255:~/docker$ docker images 
Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?
这个时候启动docker服务即可：
root@10-13-109-255:~# /usr/local/bin/dockerd &
或者：
systemctl start docker # 启动docker
systemctl restart docker # 重启dokcer
systemctl enable docker # 开机自动启动docker

# 监测容器：
gswewf@gswewf-pc:~$ sudo pip3 install ctop

在一下旧的版本中导入时可能出错：
gswewf@gswewf-pc:~/docker/ubuntu$ docker export ca4b1acbe79b > ubuntu0717-export.tar
ubuntu@10-13-158-31:~/docker/ubuntu$ sudo docker import ubuntu0717-export.tar ubuntu:0717
Downloading from http://ubuntu0717-export.tar
FATA[0001] Get http://ubuntu0717-export.tar: dial tcp: lookup ubuntu0717-export.tar: no such host 
# 这个时候改用下面的方法导入即可：
ubuntu@10-13-158-31:~/docker/ubuntu$ cat ubuntu0717-export.tar | sudo docker import - ubuntu:0717
16a079ae5a08c141a3e710a987259a3cd633f206de226430a46d9ef4e4ddf023

# 重启之前的一个容器报错：
gswewf@gswewf-pc:~/docker/neo4j/nwd$ sudo docker start nwd27474
Error response from daemon: driver failed programming external connectivity on endpoint nwd27474 (aecc9f558db95cf92ebd496f382ab1608c62e422e8022ebf288ae0b350068557):  (iptables failed: iptables --wait -t filter -A DOCKER ! -i docker0 -o docker0 -p tcp -d 172.17.0.4 --dport 7687 -j ACCEPT: iptables: No chain/target/match by that name.
 (exit status 1))
# 解决方法，重启docker服务即可
gswewf@gswewf-pc:~$ sudo systemctl restart docker

# 修改docker容器时间：
确认宿主机时间对否；在宿主机时间正确情况下可以：
1、重新启动一个容器，加上如下参数，即可使用宿主机时间
$ docker run -i -t --restart=always --detach --name=dbang18100 -p 18100:8000 --volume=$PWD:/dbang  -v /etc/localtime:/etc/localtime ubuntu:0717 /bin/bash
2、假如，你不想重新启动，或者不能重新启动，也没关系，可以直接把文件复制到容器内，如下
$ docker cp /etc/localtime [containerId]:/etc/localtime
# 若宿主机时区不对，可以：
sudo cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

ubuntu@ip-172-33-14-6:~$ docker cp /etc/localtime shanglishi18010:/etc/localtime
FATA[0000] Error: Path not specified
ubuntu@ip-172-33-14-6:~$ docker -v
Docker version 1.6.2, build 7c8fca2
版本1.6.2不允许从主机复制到容器，您需要升级到至少1.8的支持。

# pull镜像速度慢，报错：
Error response from daemon: Get https://registry-1.docker.io/v2/: net/http: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers)
可在 https://www.daocloud.io 注册账号 使用Docker 加速器；

swyhq@gswewf-pc:~/hello-world/docker$ curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://7d466737.m.daocloud.io
Error: Unsupported OS, please set registry-mirror manually.

修改Docker配置文件/etc/default/docker如下：

DOCKER_OPTS="--registry-mirror=http://aad0405c.m.daocloud.io"
使用service docker restart重启Docker服务即可。

curl -sSL https://get.daocloud.io/daotools/set_mirror.sh | sh -s http://7d466737.m.daocloud.io Copy
该脚本可以将 --registry-mirror 加入到你的 Docker 配置文件 /etc/docker/daemon.json 中。适用于 Ubuntu14.04、Debian、CentOS6 、CentOS7、Fedora、Arch Linux、openSUSE Leap 42.1，其他版本可能有细微不同。更多详情请访问文档。

Docker For Windows
在桌面右下角状态栏中右键 docker 图标，修改在 Docker Daemon 标签页中的 json ，把下面的地址:
http://7d466737.m.daocloud.io Copy
加到"registry-mirrors"的数组里。点击 Apply 。

# 有时候拉取镜像时识别，可能对应的tag不是`latest`，
可以在类似`https://hub.docker.com/r/mobz/elasticsearch-head/tags/`查看tags是多少：
gswewf@gswewf-pc:~$ docker pull mobz/elasticsearch-head
Using default tag: latest
Error response from daemon: manifest for mobz/elasticsearch-head:latest not found
gswewf@gswewf-pc:~$ docker pull mobz/elasticsearch-head:5-alpine


# 导入镜像出错：
ubuntu@ip-172-33-8-214:/data/docker/ubuntu$ cat ubuntu0915-export.tar |sudo docker import - ubuntu:0915
FATA[0037] Error response from daemon: ApplyLayer exit status 1 stdout:  stderr: write /usr/lib/gcc/x86_64-linux-gnu/5/lto1: read-only file system

请确保Docker容器中有足够的可用磁盘空间，通常是/var/lib/docker/graph。
如果您的/var空间有限，您可以通过指定-g选项来更改docker根位置
-g，--graph =“/var/lib/docker”
OPTIONS="-g /data/docker -H unix:///var/run/docker.sock -H 0.0.0.0:4243 --selinux-enabled"
用作Docker运行时根目录的路径


# 删除容器异常：
ubuntu@ip-172-33-8-214:/data/docker/ubuntu$ docker rm -v b06e71597f91
Error response from daemon: Cannot destroy container b06e71597f91: Driver devicemapper failed to remove root filesystem b06e71597f91207bfc4968ef0c258a6accfcf4eee1e057d9d590eeb1a7e11cb4: Error running DeleteDevice dm_task_run failed
FATA[0000] Error: failed to remove one or more containers 
# 添加-f参数强制删除
ubuntu@ip-172-33-8-214:/data/docker/ubuntu$ docker rm -f b06e71597f91
b06e71597f91

使用docker运行容器时出错，
Error response from daemon: Error running DeviceCreate (createSnapDevice) dm_task_run failed

方法1：
ubuntu@ip-172-33-8-214:/data/docker/ubuntu$ sudo service docker stop
ubuntu@ip-172-33-8-214:/data/docker/ubuntu$ sudo thin_check /var/lib/docker/devicemapper/devicemapper/metadata
若 thin_check 没安装，则通过下面的方法安装：
ubuntu@ip-172-33-8-214:/data/docker/ubuntu$ sudo apt-get install thin-provisioning-tools
ubuntu@ip-172-33-8-214:/data/docker/ubuntu$ sudo service docker start

方法2：
# systemctl stop docker.service 
# mv /var/lib/docker/ /var/lib/docker.backup
# systemctl start docker.service
上述方法均无效后，直接卸载重装。

# 删除容器出错：
ubuntu@ip-172-33-11-15:~/zhongan_neo4j$ docker rm -v zhongan_neo4j_18000 
Error response from daemon: Driver aufs failed to remove root filesystem aa7595e846a9754f8c0bdd084b0e91429a58ce87f24f2646970421e049dea061: rename /var/lib/docker/aufs/mnt/f788ac88a12ffd733b2d03f494d32c8059dc8632812d5e4acc91d6a8c0b74b20 /var/lib/docker/aufs/mnt/f788ac88a12ffd733b2d03f494d32c8059dc8632812d5e4acc91d6a8c0b74b20-removing: device or resource busy
# 解决方法，使用 umount -l 解除占用即可：
ubuntu@ip-172-33-11-15:~/zhongan_neo4j$ sudo umount -l /var/lib/docker/aufs/mnt/f788ac88a12ffd733b2d03f494d32c8059dc8632812d5e4acc91d6a8c0b74b20

gswewf@gswewf-pc:~$ sudo apt-get install docker.io
正在读取软件包列表... 完成
正在分析软件包的依赖关系树
正在读取状态信息... 完成
E: 无法定位软件包 docker.io
E: 无法按照 glob ‘docker.io’ 找到任何软件包
E: 无法按照正则表达式 docker.io 找到任何软件包

更改配置软件源：
gswewf@gswewf-pc:~$ sudo vim /etc/apt/sources.list
deb [by-hash=force] http://mirrors.aliyun.com/deepin unstable main contrib non-free
# deb [by-hash=force] http://packages.deepin.com/deepin unstable main contrib non-free
# deb-src http://packages.deepin.com/deepin unstable main contrib non-free

gswewf@gswewf-pc:~$ sudo apt-get update
gswewf@gswewf-pc:~$ sudo apt-get install docker.io

# 容器内不能输入中文，中文乱码等：
gswewf@gswewf-PC:~/docker/mongo$ docker exec -it some-mongo env LANG=C.UTF-8 /bin/bash

远程执行docker命令：
ssh ubuntu@42.93.171.44 docker exec -it multiple_projects_neo4j_1111118855 /var/lib/neo4j/bin/neo4j-shell -file /var/lib/neo4j/data/all.cypher
报错：docker the input device is not a TTY
解决方法很简单，只需要去掉上面的命令中的-it 即可．
ssh ubuntu@42.93.171.44 docker exec multiple_projects_neo4j_1111118855 /var/lib/neo4j/bin/neo4j-shell -file /var/lib/neo4j/data/all.cypher


