
return apoc.text.split('你好 中国', ' ')
╒═══════════════════════════════╕
│"apoc.text.split('你好 中国', ' ')"│
╞═══════════════════════════════╡
│["你好","中国"]                    │
└───────────────────────────────┘

RETURN apoc.text.replace('ad你好adw我在a','([a-zA-Z])+', ' ')
╒════════════════════════════════════════════════════╕
│"apoc.text.replace('ad你好adw我在a','([a-zA-Z])+', ' ')"│
╞════════════════════════════════════════════════════╡
│" 你好 我在 "                                           │
└────────────────────────────────────────────────────┘

return apoc.text.join(["你好", "中国"], '-')
╒═══════════════════════════════════╕
│"apoc.text.join(["你好", "中国"], '-')"│
╞═══════════════════════════════════╡
│"你好-中国"                            │
└───────────────────────────────────┘

RETURN apoc.text.distance('恶性肿瘤能否赔偿', '恶性肿瘤保不保')
╒═══════════════════════════════════════════╕
│"apoc.text.distance('恶性肿瘤能否赔偿', '恶性肿瘤保不保')"│
╞═══════════════════════════════════════════╡
│4                                          │
└───────────────────────────────────────────┘

RETURN apoc.text.capitalize('all_baoxian')
╒═════════════════════════════════════╕
│"apoc.text.capitalize('all_baoxian')"│
╞═════════════════════════════════════╡
│"All_baoxian"                        │
└─────────────────────────────────────┘

RETURN apoc.text.fuzzyMatch('恶性肿瘤能否赔偿', '恶性肿瘤保不保')
╒═════════════════════════════════════════════╕
│"apoc.text.fuzzyMatch('恶性肿瘤能否赔偿', '恶性肿瘤保不保')"│
╞═════════════════════════════════════════════╡
│false                                        │
└─────────────────────────────────────────────┘

RETURN apoc.text.fuzzyMatch('那恶性肿瘤保不', '恶性肿瘤保不保')
╒════════════════════════════════════════════╕
│"apoc.text.fuzzyMatch('那恶性肿瘤保不', '恶性肿瘤保不保')"│
╞════════════════════════════════════════════╡
│true                                        │
└────────────────────────────────────────────┘

RETURN apoc.text.base64Encode('neo4j')
╒═════════════════════════════════╕
│"apoc.text.base64Encode('neo4j')"│
╞═════════════════════════════════╡
│"bmVvNGo="                       │
└─────────────────────────────────┘

RETURN apoc.text.base64Decode("bmVvNGo=")
╒════════════════════════════════════╕
│"apoc.text.base64Decode("bmVvNGo=")"│
╞════════════════════════════════════╡
│"neo4j"                             │
└────────────────────────────────────┘

# 随机字符串生成：
return apoc.text.random(8, 'A-Za-z0-9')
╒══════════════════════════════════╕
│"apoc.text.random(8, 'A-Za-z0-9')"│
╞══════════════════════════════════╡
│"T5b3gtk1"                        │
└──────────────────────────────────┘

参考资料：
https://neo4j-contrib.github.io/neo4j-apoc-procedures/index33.html

