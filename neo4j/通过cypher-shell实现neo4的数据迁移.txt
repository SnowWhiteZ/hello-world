通过cypher-shell实现neo4的数据迁移：

    步骤1： 导出数据
    在 `http://localhost:7474/browser/` 执行命令，导入数据
    导出全库数据：CALL apoc.export.cypher.all("/var/lib/neo4j/data/neo4j_all_data.cypher",{format:'plain'})"
    导致部分数据：call apoc.export.cypher.query("MATCH (n:Zhrs) OPTIONAL MATCH (n)-[r]-(n2) RETURN n,r,n2","/var/lib/neo4j/data/zhrs_all_plain_20190328_1603.cypher",{format:'plain'})
    注意： 需要设置导出的数据格式是： format:'plain'

    步骤2： 执行cypher-shell命令将导出的数据，迁移到远程neo4j数据库
    bash-4.3# cat neo4j_all_data.cypher | bin/cypher-shell -u neo4j -p 123456 -a bolt://192.168.3.164:27687 --format plain

通过cypher文件实现数据的写入远程neo4j:
    步骤1： 在拟导入数据的机器人上新建一个neo4j服务
    gswyhq@192.168.3.164:~$ docker run --detach --name=multiple_projects_27474  -e NEO4J_AUTH=neo4j/123456 -p 1337:1337 -p 27474:7474 -v $PWD/data:/data -p 27687:7687 -e NEO4J_dbms_security_procedures_unrestricted=apoc.\\\* -e NEO4J_apoc_export_file_enabled=true -e NEO4J_apoc_import_file_enabled=true --env NEO4J_dbms_allow__format__migration=true -e NEO4J_dbms_shell_enabled=true -e NEO4J_dbms_shell_host=0.0.0.0 -e NEO4J_dbms_shell_port=1337 -e NEO4J_dbms_memory_heap_initial__size=1024m -e NEO4J_dbms_memory_heap_max__size=2048m 899150993273.dkr.ecr.cn-north-1.amazonaws.com.cn/nlp:neo4j_3.4.5
    cf6ec5ea3f629b57981a6efe31a76e2c8760875b0140aa30d19ebf4396ff7d4a

    步骤2： 在任何一个机器上登录neo4j
    [zy@ubuntu-105 data]$docker exec -it multiple_projects_7474 /bin/bash

    步骤3：编写cypher文件
    bash-4.3# vi examples.cypher
    CREATE (batman:Person:Test20190328 {name: 'Bruce Wayne'}) RETURN batman;

    MATCH (n) RETURN n limit 3;

    步骤3： 将cypher文件通过 cypher-shell 命令导入到远程 neo4j
    bash-4.3# cat examples.cypher | bin/cypher-shell -u neo4j -p 123456 -a bolt://192.168.3.164:27687 --format plain
    batman
    (:Person:Test20190328 {name: "Bruce Wayne"})
    n
    (:Person:Test20190328 {name: "Bruce Wayne"})


