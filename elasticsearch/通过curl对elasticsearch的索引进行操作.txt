

通过下面的命令可以查看所有的索引：
curl -XGET 'localhost:9200/_cat/indices?v'

查看以“all_baoxian"开头的索引：
gswewf@gswewf-PC:~/yhb$ curl -XGET -u elastic:web12008 '192.168.3.145:9200/_cat/indices/all_baoxian*'

查看索引`dingding7500_faq`的段信息：
gswewf@gswewf-PC:~$ curl -XGET localhost:9200/dingding7500_faq/_segments

# 按照正则匹配删除索引
curl -XDELETE 'localhost:9200/logs_2013*'

获取索引`dingding`的详情：
curl -XGET 'http://192.168.3.250:9200/dingding/_settings'

创建名为`customer`的索引：
curl -XPUT 'localhost:9200/customer?pretty'

删除索引`customer`：
curl -XDELETE 'localhost:9200/customer?pretty'

# 删除索引，也可以通过正则进行匹配，如删除以`faq`开头的索引：
curl -XDELETE '152.180.187.77:18200/faq*?pretty'


若不需要删除原索引别名，仅仅添加一个索引别名：
gswewf@gswewf-PC:~$ curl -XPOST '192.168.3.105:9200/_aliases?pretty' -H 'Content-Type: application/json' -d'
{
    "actions": [
        { "add":    { "index": "dingding_faq", "alias": "dingding_faq_alias" }
        }
    ]
}
'

# 若仅仅是删除一个索引的别名：
curl -XPOST '192.168.3.105:9200/_aliases?pretty' -H 'Content-Type: application/json' -d'
{
    "actions": [
        { "remove": { "index": "dingding_faq", "alias": "dingding_faq_alias" }
        }
    ]
}
'

# 检测别名`dingding_faq_alias`指向哪一个索引：
curl -XGET 'localhost:9200/*/_alias/dingding_faq_alias?pretty'

# 哪些别名指向索引`dingding_faq`：
curl -XGET 'localhost:9200/dingding_faq/_alias/*?pretty'

# 其他，关闭，开启索引
curl -XPOST 'localhost:9200/my_index/_close?pretty'
curl -XPOST 'localhost:9200/my_index/_open?pretty'

# 更新索引设置
# number_of_replicas是在索引中的的设置，用来定义复制分片的数量，而不是现在活动的复制节点的数量。
curl -XPUT 'localhost:9200/baike/_settings?pretty' -H 'Content-Type: application/json' -d'
{
    "index" : {
        "number_of_replicas" : 1
    }
}
'

# 查询某个索引的所有文档数：
curl -XGET 152.180.187.77:18200/zhrs_cypher_show_three_tuple_alias/_count?

# 索引状态：
localhost:9200/my_index/_stats

如果使用 stopwords 参数以内嵌方式指定停用词，那么你只能通过关闭索引，更新分析器的配置update index settings API，然后在重新打开索引才能更新停用词。
更新的停用词不会改变任何已经存在的索引。这些停用词的只适用于新的搜索或更新文档。如果要改变现有的文档，则需要重新索引数据。

# 创建一个索引dobbyindex.一个索引默认指派5个主分片,实例中我们设定4个主分片和2个复制分片（每个主分片有2个复制分片对应）：
PUT /dobbyindex
{
  "settings": {
    "number_of_shards": 4,
    "number_of_replicas": 2
  }
}

# 重命名索引：
1、复制索引一个新的名字(分词等索引信息并不一定存在，仅仅复制数据)
POST /_reindex
{
  "source": {
    "index": "twitter"
  },
  "dest": {
    "index": "new_twitter"
  }
}
2、删除旧的索引
DELETE /twitter

如删除索引`dingding500_020913_faq`：
gswewf@gswewf-PC:~$ curl -XDELETE localhost:9200/dingding500_020913_faq

当索引变得更“老”，它们到达一个几乎不会再被访问的时间点。 我们可以在这个阶段删除它们，但也许你想将它们留在这里以防万一有人在半年后还想要访问它们。
这些索引可以被关闭。它们还会存在于集群中，但它们不会消耗磁盘空间以外的资源。重新打开一个索引要比从备份中恢复快得多。
在关闭之前，值得我们去刷写索引来确保没有事务残留在事务日志中。一个空白的事务日志会使得索引在重新打开时恢复得更快：

POST /logs_2014-01-*/_flush # 刷写（Flush）所有`logs_2014-01-*`正则匹配到的的索引来清空事务日志。
POST /logs_2014-01-*/_close # 关闭所有`logs_2014-01-*`正则匹配到的索引.
POST /logs_2014-01-*/_open # 当你需要再次访问它们时，使用 open API 来重新打开它们。

# 关闭、打开索引 my_index
curl -XPOST 'localhost:9200/my_index/_close?pretty'
curl -XPOST 'localhost:9200/my_index/_open?pretty'


curl -XGET 'localhost:9200/xinxin_20180227_141500/_settings,_mappings,_aliases?pretty'

别名可以帮助我们更加透明地在索引间切换。 当创建索引时，你可以将 logs_current 指向当前索引来接收新的日志事件， 当检索时，更新 last_3_months 来指向所有最近三个月的索引：
POST /_aliases
{
  "actions": [
    { "add":    { "alias": "logs_current",  "index": "logs_2014-10" }},
    { "remove": { "alias": "logs_current",  "index": "logs_2014-09" }},
    { "add":    { "alias": "last_3_months", "index": "logs_2014-10" }},
    { "remove": { "alias": "last_3_months", "index": "logs_2014-07" }}
  ]
}

将 logs_current 由九月切换至十月。
将十月添加到 last_3_months 并且删掉七月。

# 根据时间工具生成索引名
# 格式： <static_name{date_math_expr{date_format|time_zone}}>
# 编码映射： {'{': '%7B', '|': '%7C', '>': '%3E', '<': '%3C', ':': '%3A', '+': '%2B', '}': '%7D', ',': '%2C', '/': '%2F'}

es_index = '<static_name{date_math_expr{date_format|time_zone}}>'
static_name = 'clogstash-'
date_math_expr = 'now/s-1d'
date_format = 'YYYY.MM.dd'
date_format = "yyyyMMdd_HHmmss"
time_zone = '+08:00'

es_index = es_index.replace('static_name', static_name)
es_index = es_index.replace('date_math_expr', date_math_expr)
es_index = es_index.replace('date_format', date_format)
es_index = es_index.replace('time_zone', time_zone)

for char, encod_char in PERCENT_ENCODING_CHARACTERS.items():
    es_index = es_index.replace(char, encod_char)

gswewf@gswewf-PC:~$ curl -XPUT 'localhost:9200/%3Clogstash-%7Bnow%2FM-1M%7BYYYY.MM%7D%7D%3E'
{"acknowledged":true,"shards_acknowledged":true,"index":"logstash-2018.01"}
等同于：
gswewf@gswewf-PC:~$ curl -XPUT 'localhost:9200/logstash-2018.01'
{"acknowledged":true,"shards_acknowledged":true,"index":"logstash-2018.01"}

# 删除过期索引
# DELETE /<logs-{now-30d/d}*> with URI encoding:
DELETE /%3Clogs-%7Bnow-30d%2Fd%7D*%3E

curl -XGET 'localhost:9200/xinxin_20180228*/_aliases?pretty'
