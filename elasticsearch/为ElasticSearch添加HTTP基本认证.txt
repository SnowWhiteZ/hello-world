
ES的HTTP连接没有提供任何的权限控制措施，一旦部署在公共网络就容易有数据泄露的风险，尤其是加上类似elasticsearch-head这样友好的前端界面，简直让你的数据瞬间裸奔在黑客的眼皮底下。
X-Pack是一个Elastic Stack扩展，将安全性，警报，监控，报告，机器学习和图形功能捆绑到一个易于安装的软件包中。 要访问此功能，您必须在Elasticsearch中安装X-Pack。

在es 6.3版本之前是需要自己额外安装X-Pack的；
在es 6.3版本开始，开放 X-Pack的代码；默认是安装了X-Pack的；

docker pull docker.elastic.co/elasticsearch/elasticsearch:6.3.0
docker run -p 9200:9200 -p 9300:9300 -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch:6.3.0

在Elasticsearch中安装X-Pack（6.3之前的版本）
安装Elasticsearch之后，您可以选择获取并安装X-Pack。

您必须运行与您正在运行的Elasticsearch版本相匹配的X-Pack版本。有关产品兼容性的更多信息，请参阅弹性支持列表(https://www.elastic.co/support/matrix#matrix_compatibility)。

重要
如果您是第一次在现有群集上安装X-Pack，则必须执行完整的群集重新启动。安装X-Pack后，必须在群集中的所有节点上启用安全性和安全性才能使群集正常运行。升级时通常可以执行滚动升级。

下图概述了在Elasticsearch上设置X-Pack所需的步骤：

Elasticsearch的安装概述
要在Elasticsearch中安装X-Pack：

可选：如果您想在没有互联网访问权的机器上安装X-Pack，请执行以下操作：

手动下载X-Pack zip文件：
https://artifacts.elastic.co/downloads/packs/x-pack/x-pack-6.2.3.zip（sha512）
5.6.4版本的地址（文件有点大共153MB）：https://artifacts.elastic.co/downloads/packs/x-pack/x-pack-5.6.4.zip

注意
Elasticsearch，Kibana和Logstash的插件包含在同一个zip文件中。如果您已经下载此文件以在其中一个其他产品上安装X-Pack，则可以重新使用相同的文件。

将zip文件传输到脱机机器上的临时目录。 （不要将文件放在Elasticsearch插件目录中。）
从集群中的每个节点上的ES_HOME运行 bin/elasticsearch-plugin 安装：

bin/elasticsearch-plugin install x-pack

插件安装脚本需要直接访问互联网才能下载并安装X-Pack。如果您的服务器无法访问Internet，请指定您下载到临时目录的X-Pack zip文件的位置。

bin/elasticsearch-plugin install file:///path/to/file/x-pack-6.2.3.zip

注意
您必须在file：//协议后指定zip文件的绝对路径。

确认您要授予X-Pack附加权限。

小费
在运行install命令时指定--batch选项以自动授予这些权限并绕过这些安装提示。

X-Pack需要这些权限才能在安装期间设置威胁上下文加载器，以便Watcher可以发送电子邮件通知。

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@
@警告：插件需要额外的权限@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@
* java.lang.RuntimePermission accessClassInPackage.com.sun.activation.registries
* java.lang.RuntimePermission getClassLoader
* java.lang.RuntimePermission setContextClassLoader
* java.lang.RuntimePermission setFactory
* java.security.SecurityPermission createPolicy.JavaPolicy
* java.security.SecurityPermission getPolicy
* java.security.SecurityPermission putProviderProperty.BC
* java.security.SecurityPermission setPolicy
* java.util.PropertyPermission *读取，写入
* java.util.PropertyPermission sun.nio.ch.bugLevel写入
* javax.net.ssl.SSLPermission setHostnameVerifier
请参阅http://docs.oracle.com/javase/8/docs/technotes/guides/security/permissions.html
了解这些权限允许的内容以及相关风险。

继续安装？ [Y / N - ] Y
X-Pack需要权限才能使Elasticsearch启动机器学习分析引擎。本地控制器确保启动的进程是有效的机器学习组件。一旦启动，机器学习过程和Elasticsearch之间的通信就局限于Elasticsearch所运行的操作系统用户。

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@
@警告：插件分叉本地控制器@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@
这个插件启动一个不受制于的本地控制器
Java安全管理器和系统调用过滤器。

继续安装？ [Y / N - ] Y
X-Pack将尝试在Elasticsearch中自动创建一些索引。默认情况下，Elasticsearch配置为允许自动创建索引，不需要额外的步骤。
但是，如果您在Elasticsearch中禁用自动索引创建，则必须在elasticsearch.yml中配置action.auto_create_index以允许X-Pack创建以下索引：

action.auto_create_index: .security,.monitoring*,.watches,.triggered_watches,.watcher-history*,.ml*


重要
如果您使用的是Logstash或Beats，那么您的action.auto_create_index设置中很可能需要额外的索引名称，具体值取决于您的本地配置。
如果您不确定环境的正确值，则可以考虑将值设置为*，以便自动创建所有索引。

配置传输层安全性（TLS / SSL）。

如果您拥有非试用许可证并且想要使用X-Pack安全性，则必须配置TLS以进行节点间通信。

注意
此要求适用于具有多个节点的群集，并适用于在单个节点上侦听外部接口的群集。使用回送接口的单节点群集不具备此要求。有关更多信息，请参阅加密通信。

为每个Elasticsearch节点生成节点证书。
在每个Elasticsearch节点上启用TLS。
启动Elasticsearch。

bin/elasticsearch

设置所有内置用户的密码。 setup-passwords命令是第一次设置内置用户密码的最简单方法。

例如，您可以在“交互式”模式下运行该命令，该模式会提示您为 elastic, kibana, and logstash_system 用户输入新密码:

bin/x-pack/setup-passwords interactive

重要
setup-passwords命令使用在命令成功运行后不再有效的瞬态引导程序密码。您不能再次运行setup-passwords命令。相反，您可以从Kibana中的管理>用户UI更新密码或使用安全用户API。
此命令仅用于X-Pack的初始配置期间。它使用弹性引导程序密码来运行用户管理API请求。为弹性用户设置密码后，引导程序密码不再处于活动状态，您不能使用此命令。相反，您可以使用Kibana中的管理>用户UI或更改密码API来更改密码。
此命令使用HTTP连接来连接到群集并运行用户管理请求。如果您的群集在HTTP层使用TLS / SSL，则该命令会自动尝试使用HTTPS协议建立连接。它使用elasticsearch.yml文件中的xpack.security.http.ssl设置来配置连接。
如果您不使用默认配置目录位置，请确保在运行setup-passwords命令之前，ES_PATH_CONF环境变量返回正确的路径。您可以使用-E命令选项覆盖elasticsearch.yml文件中的设置。有关调试连接失败的更多信息，请参阅Setup-passwords命令由于连接失败而失败。

有关更多信息，请参阅设置内置用户密码。
bin/x-pack/setup-passwords auto|interactive
[-b, --batch] [-h, --help] [-E <KeyValuePair>]
[-s, --silent] [-u, --url "<URL>"] [-v, --verbose]


setup-passwords
The setup-passwords command sets the passwords for the built-in elastic, kibana, and logstash_system users.

Synopsis
bin/x-pack/setup-passwords auto|interactive
[-b, --batch] [-h, --help] [-E <KeyValuePair>]
[-s, --silent] [-u, --url "<URL>"] [-v, --verbose]
Description
This command is intended for use only during the initial configuration of X-Pack. It uses the elastic bootstrap password to run user management API requests. After you set a password for the elastic user, the bootstrap password is no longer active and you cannot use this command. Instead, you can change passwords by using the Management > Users UI in Kibana or the Change Password API.

This command uses an HTTP connection to connect to the cluster and run the user management requests. If your cluster uses TLS/SSL on the HTTP layer, the command automatically attempts to establish the connection by using the HTTPS protocol. It configures the connection by using the xpack.security.http.ssl settings in the elasticsearch.yml file. If you do not use the default config directory location, ensure that the ES_PATH_CONF environment variable returns the correct path before you run the setup-passwords command. You can override settings in your elasticsearch.yml file by using the -E command option. For more information about debugging connection failures, see Setup-passwords command fails due to connection failure.

参数：
auto    将随机生成的密码输出到控制台.
-b, --batch 如果启用，则运行更改密码过程而不提示用户。
-E <KeyValuePair>   配置标准的Elasticsearch或X-Pack设置。
-h, --help  显示帮助信息
interactive 提示您手动输入密码。
-s, --silent    显示最小的输出。
-u, --url "<URL>"   指定该工具用于提交用户管理API请求的URL。默认值由您的elasticsearch.yml文件中的设置确定。如果xpack.security.http.ssl.enabled设置为true，则必须指定HTTPS URL。
Specifies the URL that the tool uses to submit the user management API requests. The default value is determined from the settings in your elasticsearch.yml file. If xpack.security.http.ssl.enabled is set to true, you must specify an HTTPS URL.
-v, --verbose   显示详细的输出。

例子：
bin/x-pack/setup-passwords auto -u "http://localhost:9201"

若通过DEB/RPM软件包安装X-Pack，则需要超级用户在`/usr/share/elasticsearch`目录运行：
cd /usr/share/elasticsearch
sudo bin/elasticsearch-plugin install x-pack

注意
如果配置文件不在/etc/elasticsearch中，则需要通过通过ES_PATH_CONF = <path>设置环境变量ES_PATH_CONF来指定配置文件的位置。



安装示例：
gswewf@gswewf-PC:~/docker/elasticsearch$ docker exec -it elasticsearch5.6.4_9200_data /bin/bash
root@81e692d0a377:/usr/share/elasticsearch# ./bin/elasticsearch-plugin install file:///usr/share/elasticsearch/data/x-pack-5.6.4.zip
-> Downloading file:///usr/share/elasticsearch/data/x-pack-5.6.4.zip
[=================================================] 100%  
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@     WARNING: plugin requires additional permissions     @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
* java.io.FilePermission \\.\pipe\* read,write
* java.lang.RuntimePermission accessClassInPackage.com.sun.activation.registries
* java.lang.RuntimePermission getClassLoader
* java.lang.RuntimePermission setContextClassLoader
* java.lang.RuntimePermission setFactory
* java.security.SecurityPermission createPolicy.JavaPolicy
* java.security.SecurityPermission getPolicy
* java.security.SecurityPermission putProviderProperty.BC
* java.security.SecurityPermission setPolicy
* java.util.PropertyPermission * read,write
* java.util.PropertyPermission sun.nio.ch.bugLevel write
* javax.net.ssl.SSLPermission setHostnameVerifier
See http://docs.oracle.com/javase/8/docs/technotes/guides/security/permissions.html
for descriptions of what these permissions allow and the associated risks.

Continue with installation? [y/N]y
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@        WARNING: plugin forks a native controller        @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
This plugin launches a native controller that is not subject to the Java
security manager nor to system call filters.

Continue with installation? [y/N]y
-> Installed x-pack
root@81e692d0a377:/usr/share/elasticsearch#


由于只要安装好elasticsearch后，输入正确的ip地址和端口，并有head插件就可以看到索引库，所以如果别人知道IP和和端口，那么数据就完全裸奔在别人面前。所以在elasticsearch5.x之后官方都建议用x-pack框架，安装x-pack框架后，每次进去都需要用户名和密码，需要访问这样的url：http://localhost:9100/?auth_user=elastic&auth_password=changeme。安装x-pack后用户名和密码默认为elastic和changeme。

就是elasticsearch-head插件在安装x-pack插件之后就无法使用，原因是因为elastic公司在x-pack中加入了安全模块(security机制)

这个时候需要在elasticseach.yml中增加下面几行配置即可解决。

http.cors.enabled: true
http.cors.allow-origin: "*"
http.cors.allow-headers: "Authorization"

# 注意引号的前后都要给个空格。

root@81e692d0a377:/usr/share/elasticsearch/config# echo 'http.cors.allow-headers: "Authorization"' >> elasticsearch.yml
gswewf@gswewf-PC:~/docker/elasticsearch$ docker restart elasticsearch5.6.4_9200_data

然后在每次使用head插件的时候，按照如下的格式输入：

http://localhost:9100/?auth_user=elastic&auth_password=changeme

其中elastic是默认账号，changeme是初始密码，均可以在x-pack插件中进行修改。

# 无账号密码，不可访问
gswewf@gswewf-PC:~/docker/elasticsearch$ curl -XGET localhost:9200/xinxin_three_tuple_alias/_count?
{"error":{"root_cause":[{"type":"security_exception","reason":"missing authentication token for REST request [/xinxin_three_tuple_alias/_count?]","header":{"WWW-Authenticate":"Basic realm=\"security\" charset=\"UTF-8\""}}],"type":"security_exception","reason":"missing authentication token for REST request [/xinxin_three_tuple_alias/_count?]","header":{"WWW-Authenticate":"Basic realm=\"security\" charset=\"UTF-8\""}},"status":401}gswewf@gswewf-PC:~/docker/elasticsearch$
# 通过user选项带上账号密码，返回正常数据
gswewf@gswewf-PC:~/docker/elasticsearch$ curl -XGET localhost:9200/xinxin_three_tuple_alias/_count? --user elastic:changeme
{"count":934,"_shards":{"total":5,"successful":5,"skipped":0,"failed":0}}

ES官方的Python客户端可以通过http_auth配置账号密码：

from elasticsearch import Elasticsearch
es = Elasticsearch(['localhost'], http_auth=('elastic', 'changeme'), port=9200)
es.info()
Out[16]:
{'cluster_name': 'elasticsearch',
 'cluster_uuid': 'xbqg6_eURnu_NjvOxgGqlQ',
 'name': 'QLRgwkP',
 'tagline': 'You Know, for Search',
 'version': {'build_date': '2017-10-31T18:55:38.105Z',
  'build_hash': '8bbedf5',
  'build_snapshot': False,
  'lucene_version': '6.6.1',
  'number': '5.6.4'}}

# 数据迁移时的登录认证：
gswewf@gswewf-PC:~/yhb/es_search$ docker run --rm -ti taskrabbit/elasticsearch-dump   --input="http://192.168.3.105:9200/jrtz_kg_entity_synonyms_20180404_111151"   --output="http://elastic:web12008@192.168.3.145:9200/jrtz_kg_entity_synonyms_20180404_111151"  --type=data

# requests 请求时的登录验证
r = requests.get(url='http://localhost:9200/all_baoxian_templates_question_alias/_count', auth=('elastic', 'web12008'))
r.json()
Out[9]:
{'_shards': {'failed': 0, 'skipped': 0, 'successful': 5, 'total': 5},
 'count': 52}

X-Pack有三个内置用户，默认密码都是`changeme`：
名字  描述
elastic 内置超级用户。查看内置角色。
kibana  用户Kibana用来连接Elasticsearch并与之通信。
logstash_system 用户Logstash在Elasticsearch中存储监控信息时使用。

swyhq@gswewf-PC:~$ curl -XGET 'localhost:9200/_xpack/security/user/logstash_system' --user elastic:changeme
{"logstash_system":{"username":"logstash_system","roles":["logstash_system"],"full_name":null,"email":null,"metadata":{"_reserved":true},"enabled":true}}

# 重新设置默认用户“elastic”的密码
curl -XPUT 'localhost:9200/_xpack/security/user/elastic/_password?pretty' -H 'Content-Type: application/json' --user elastic:changeme -d'
{
  "password": "elasticpassword"
}
'

curl -XPUT 'localhost:9200/_xpack/security/user/kibana/_password?pretty' -H 'Content-Type: application/json' -d'
{
  "password": "kibanapassword"
}
'

curl -XPUT 'localhost:9200/_xpack/security/user/logstash_system/_password?pretty' -H 'Content-Type: application/json' -d'
{
  "password": "logstashpassword"
}
'

若‘logstash_system’被禁用了，可以通过以下方法启用：
curl -XPUT 'localhost:9200/_xpack/security/user/logstash_system/_enable?pretty'

添加一个用户名为‘jacknich’密码为‘j@rV1s’的新用户：
curl -XPOST 'localhost:9200/_xpack/security/user/jacknich?pretty' -H 'Content-Type: application/json' -d'
{
  "password" : "j@rV1s",
  "roles" : [ "admin", "other_role1" ],
  "full_name" : "Jack Nicholson",
  "email" : "jacknich@example.com",
  "metadata" : {
    "intelligence" : 7
  }
}
'

查看用户名为‘jacknich’用户除密码之外的信息：
curl -XGET 'localhost:9200/_xpack/security/user/jacknich?pretty'

# 查看多个用户（逗号分割列表）除密码之前的信息：
curl -XGET 'localhost:9200/_xpack/security/user/jacknich,rdinero?pretty'

# 或者，省略用户名以检索所有用户：
curl -XGET 'localhost:9200/_xpack/security/user?pretty'

禁用用户`jacknich`：
curl -XPUT 'localhost:9200/_xpack/security/user/jacknich/_disable?pretty'

启用用户`jacknich`：
curl -XPUT 'localhost:9200/_xpack/security/user/jacknich/_enable?pretty'

删除用户`jacknich`：
curl -XDELETE 'localhost:9200/_xpack/security/user/jacknich?pretty'

禁用默认密码功能
提供changeme的默认密码是为了方便您快速设置您的Elasticsearch堆栈。 在生产中运行时不应使用它。
一旦您更改了内置用户的密码，您应该通过将xpack.security.authc.accept_default_password 设置为false来禁用默认密码支持。

内部用户
X-Pack安全性有三个内部用户（_system，_xpack和_xpack_security）负责在Elasticsearch集群内进行的操作。
这些用户只能由来自群集内的请求使用。 出于这个原因，它们不能用于对API进行认证，也没有密码来管理或重置。

# 管理用户`my_admin_role`的权限：
curl -XPOST 'localhost:9200/_xpack/security/role/my_admin_role?pretty' -H 'Content-Type: application/json' -d'
{
  "cluster": ["all"],
  "indices": [
    {
      "names": [ "index1", "index2" ],
      "privileges": ["all"],
      "field_security" : { // 可选
        "grant" : [ "title", "body" ]
      },
      "query": "{\"match\": {\"title\": \"foo\"}}" // 可选
    }
  ],
  "run_as": [ "other_user" ], // 可选
  "metadata" : { // 可选
    "version" : 1
  }
}
'

# 查看`my_admin_role`用户的权限：
curl -XGET 'localhost:9200/_xpack/security/role/my_admin_role?pretty'

# 查看 "r1", "r2", and "my_admin_role"用户的权限
curl -XGET 'localhost:9200/_xpack/security/role/r1,r2,my_admin_role?pretty'

# 查看所有用户的权限：
curl -XGET 'localhost:9200/_xpack/security/role?pretty'

# 删除`my_admin_role`用户：
curl -XDELETE 'localhost:9200/_xpack/security/role/my_admin_role?pretty'

# 清除`my_admin_role`用户的本地缓存：
curl -XPOST 'localhost:9200/_xpack/security/role/my_admin_role/_clear_cache?pretty'

# 确定登录用户是否具有指定的特权列表
curl -XGET 'localhost:9200/_xpack/security/user/_has_privileges?pretty' -H 'Content-Type: application/json' -d'
{
  "cluster": [ "monitor", "manage" ],
  "index" : [
    {
      "names": [ "suppliers", "products" ],
      "privileges": [ "read" ]
    },
    {
      "names": [ "inventory" ],
      "privileges" : [ "read", "write" ]
    }
  ]
}
'

Users控制(命令行)

（1）查询所有User：
curl -XGET -u elastic 'localhost:9200/_xpack/security/user'

（2）增加User：
curl -XPOST -u elastic 'localhost:9200/_xpack/security/user/demo' -d '{   "password" : "123456",   "full_name" : " demo",   "email" : “demo@163.com",  "roles" : [ "clicks_admin" ] }'

（3）查询具体User：
curl -XGET -u elastic 'localhost:9200/_xpack/security/user/demo'

（4）删除具体User：
curl -XDELETE -u elastic 'localhost:9200/_xpack/security/user/demo'

Roles控制(命令行)

（1）查询所有Roles：
curl -XGET -u elastic 'localhost:9200/_xpack/security/role'

（2）增加Roles：
curl -XPOST -u elastic 'localhost:9200/_xpack/security/role/clicks_admin' -d '{   "indices" : [     {       "names" : [ "events*" ],       "privileges" : [ "all" ]     },     {       "names" : [ ".kibana*" ],       "privileges" : [ "manage", "read", "index" ]     }   ] }’

（3）查询具体Roles：
curl -XGET -u elastic 'localhost:9200/_xpack/security/role/clicks_admin'

（4）删除具体Roles：
curl -XDELETE -u elastic 'localhost:9200/_xpack/security/role/clicks_admin'


匿名用户设置：
xpack.security.authc:
  anonymous:
    username: anonymous_user
    roles: role1, role2
    authz_exception: true


其他：

能够成功连接上就没问题了。
x-pack也可以创建一个权限组，然后创建用户，给这个用户分配权限。
官方文档参考地址:https://www.elastic.co/guide/en/x-pack/5.4/logstash.html

1.设置权限组

http://localhost:9200/_xpack/security/role/logstash_writer/

{

 "cluster": ["manage_index_templates","monitor"],

 "indices": [

    {

     "names": [ "logstash-*","indexdb*" ],

     "privileges":["write","delete","create_index"]

    }

  ]

}



2.给用户授权,这里的logstash_internal为用户名。

http://localhost:9200/_xpack/security/user/logstash_internal



{

 "password" : "changeme",

 "roles" : [ "logstash_writer"],

 "full_name" : "Internal Logstash User"

}

运行时报错：
{"log":"[2018-05-21T06:45:35,558][ERROR][o.e.x.s.a.f.SecurityActionFilter] [vd2NYJ2] blocking [cluster:monitor/stats] operation due to expired license. Cluster health, cluster stats and indices stats \n","stream":"stdout","time":"2018-05-21T06:45:35.558447133Z"}

是因为证书过期了,需要注册申请一个license.

申请地址: https://register.elastic.co/marvel_register

注册后将以email的方式发送，通过链接下载license json文件.

根据文档提示请求api并指定新的证书

$ curl -XPUT -u elastic:changeme 'http://192.168.2.110:9200/_xpack/license?acknowledge=true' -H "Content-Type: application/json" -d @hakim-zhao-705a2a54-84d9-4ea8-b4ca-23b9d75b4ead-v5.json
{"acknowledged":true,"license_status":"valid"}

查看最新证书状态:

gswewf@gswewf-PC:~$ curl --user elastic:web12008 'http://192.168.3.145:9200/_xpack/license'
{
  "license" : {
    "status" : "expired",
    "uid" : "9a211725-5501-480a-895d-6e391503479a",
    "type" : "trial",
    "issue_date" : "2018-04-13T10:40:35.125Z",
    "issue_date_in_millis" : 1523616035125,
    "expiry_date" : "2018-05-13T10:40:35.125Z",
    "expiry_date_in_millis" : 1526208035125,
    "max_nodes" : 1000,
    "issued_to" : "elasticsearch",
    "issuer" : "elasticsearch",
    "start_date_in_millis" : -1
  }
}
