
字符串是shell编程中最常用最有用的数据类型（除了数字和字符串，也没啥其它类型好用了），字符串可以用单引号，也可以用双引号，也可以不用引号。建议使用双引号

（1）单引号——原样输出
str='this is a string'
单引号字符串的限制：单引号字符串中的变量是无效的；单引号字符串中不能出现单引号（对单引号使用转义符后也不行）。

（2）双引号
your_name="liaihyy"
str="Hello, I know your are \"$your_name\"! \n"
双引号的优点：双引号里可以有变量，可以出现转义字符

（3）字符串拼接
your_name="liaihyy"
greeting="hello, "$your_name" !"
greeting_1="hello, ${your_name} !"
echo $greeting $greeting_1

（4）字符串长度
${#变量名}
string="abcd"
echo ${#string} #输出 4

（5）获取字符串的子串
${变量名：起始索引：子串长度}
string="runoob is a great site"
echo ${string:1:4} # 输出 unoo

（6）查找子串
查找字符 "i 或 s" 的位置：
string="runoob is a great company"
echo `expr index "$string" is`  # 输出 8
注意： 以上脚本中 "`" 是反引号，而不是单引号 "'"，不要看错了哦。


file=/dir1/dir2/dir3/my.file.txt
我們可以用 ${ } 分別替換獲得不同的值：
${file#*/}：拿掉第一條 / 及其左邊的字串：dir1/dir2/dir3/my.file.txt
${file##*/}：拿掉最後一條 / 及其左邊的字串：my.file.txt
${file#*.}：拿掉第一個 . 及其左邊的字串：file.txt
${file##*.}：拿掉最後一個 . 及其左邊的字串：txt

${file%/*}：拿掉最後條 / 及其右邊的字串：/dir1/dir2/dir3
${file%%/*}：拿掉第一條 / 及其右邊的字串：(空值)
${file%.*}：拿掉最後一個 . 及其右邊的字串：/dir1/dir2/dir3/my.file
${file%%.*}：拿掉第一個 . 及其右邊的字串：/dir1/dir2/dir3/my

测试结果如下：

gswewf@gswewf-PC:~$ file=/dir1/dir2/dir3/my.file.txt
gswewf@gswewf-PC:~$ echo ${file#*/}
dir1/dir2/dir3/my.file.txt
gswewf@gswewf-PC:~$ echo ${file##*/}
my.file.txt
gswewf@gswewf-PC:~$ echo ${file#*.}
file.txt
gswewf@gswewf-PC:~$ echo ${file##*.}
txt
gswewf@gswewf-PC:~$ echo ${file%/*}
/dir1/dir2/dir3
gswewf@gswewf-PC:~$ echo ${file%%/*}

gswewf@gswewf-PC:~$ echo ${file%.*}
/dir1/dir2/dir3/my.file
gswewf@gswewf-PC:~$ echo ${file%%.*}
/dir1/dir2/dir3/my

# 分割字符串：
var='1,2,3,4,5'
var=${var//,/ }    #这里是将var中的,替换为空格
var=($var) # 用于将字符串$a分割到数组$var ${var[0]} ${var[1]} ... 分别存储分割后的数组第1 2 ... 项
echo ${var[0]}

如何读取最后一列：android-1152x1920
1. echo $string| awk -F "," '{print $NF}'
2. echo $string | awk '{split($0,array,",");print array[6]}'
3. echo $string | cut -d "," -f6
其中-d代表用什么进行分割，-f6代表要第6个结果
另外还有一个常用的参数是-c,用法为 -cx-y 这个意思是取得第x至第y个字符串 
echo “abcdefg” | cut -c3-6 输出为 def 


如何读取 android-1152x1920 中的 1152x1920
1. echo $string| awk -F "," '{print $NF}' | awk -F "-" '{print $NF}'
2. echo $string | cut -d "," -f6 | cut -c 9-   
获得android-1152x1920后，再取从第9个字符到最后的字符
 

截取指定字符串
echo | awk '{print substr("'${string}'",2,4)}' 
 
// 从第2个字符开始获取4个字符   结果为：home 
 
计算字符串长度 
 
echo | awk '{print length("'${string}'")}' 
 
// 结果为： 29 
 
字符串大小写转换 
echo | awk '{ print toupper("test"), tolower("TEST") }' 
 
结果为: TEST  test

# 替换文件中的字符串,将文件default_excalibur.cfg中的所有`127.0.0.1`替换为`0.0.0.0`：
sed -i s/127.0.0.1/0.0.0.0/g "default_excalibur.cfg"

