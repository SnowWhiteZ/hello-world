
Linux下文本文件合并和去除重复操作

less file.txt | uniq > uniq_file.txt 
上面的linux uniq去重不生效
因为uniq去重只对相邻的数据进行迭代处理，当遇到相邻的数据不重复时，就会该处的数据加一，进行新的迭代处理。
正确做法是，对文件数据进行去重处理时，先对文件的数据进行排序，然后再进行去重处理：
less file.txt |sort |uniq > uniq_file.txt

一 命令简单介绍
cat：将文本文件读出来
    文件去重合并的前提条件是先取出文件的内容。
    语法格式
    cat [-AbeEnstTuv] [--help] [--version] fileName
    参数说明：
    -n 或 --number：由 1 开始对所有输出的行数编号。
    -b 或 --number-nonblank：和 -n 相似，只不过对于空白行不编号。
    -s 或 --squeeze-blank：当遇到有连续两行以上的空白行，就代换为一行的空白行。
    -v 或 --show-nonprinting：使用 ^ 和 M- 符号，除了 LFD 和 TAB 之外。
    -E 或 --show-ends : 在每行结束处显示 $。
    -T 或 --show-tabs: 将 TAB 字符显示为 ^I。
    -A, --show-all：等价于 -vET。
    -e：等价于"-vE"选项；
    -t：等价于"-vT"选项；

uniq： 用来处理重复的行。
    从输入或者标准输入中过滤邻近的行，写到输出文件或者标准输出中。所以此命令只能处理邻近的行，
    如果对两个文件进行合并去重，则必须首先对其排序，实现一一对应，否则去重失败。
    uniq 命令用于检查及删除文本文件中重复出现的行列，一般与 sort 命令结合使用。
    uniq 可检查文本文件中重复出现的行列。
    语法
    uniq [-cdu][-f<栏位>][-s<字符位置>][-w<字符位置>][--help][--version][输入文件][输出文件]
    参数：
    -c或--count 在每列旁边显示该行重复出现的次数。
    -d或--repeated 仅显示重复出现的行列。
    -f<栏位>或--skip-fields=<栏位> 忽略比较指定的栏位。
    -s<字符位置>或--skip-chars=<字符位置> 忽略比较指定的字符。
    -u或--unique 仅显示出一次的行列。
    -w<字符位置>或--check-chars=<字符位置> 指定要比较的字符。
    --help 显示帮助。
    --version 显示版本信息。
    [输入文件] 指定已排序好的文本文件。如果不指定此项，则从标准读取数据；
    [输出文件] 指定输出的文件。如果不指定此选项，则将内容显示到标准输出设备（显示终端）。

sort：对文本的行进行排序
    对于去重而言使用默认排序方式就可以了。
     sort命令用于将文本文件内容加以排序。
    sort可针对文本文件的内容，以行为单位来排序。
    语法
    sort [-bcdfimMnr][-o<输出文件>][-t<分隔字符>][+<起始栏位>-<结束栏位>][--help][--verison][文件]
    参数说明：
    -b 忽略每行前面开始出的空格字符。
    -c 检查文件是否已经按照顺序排序。
    -d 排序时，处理英文字母、数字及空格字符外，忽略其他的字符。
    -f 排序时，将小写字母视为大写字母。
    -i 排序时，除了040至176之间的ASCII字符外，忽略其他的字符。
    -m 将几个排序好的文件进行合并。
    -M 将前面3个字母依照月份的缩写进行排序。
    -n 依照数值的大小排序。
    -o<输出文件> 将排序后的结果存入指定的文件。
    -r 以相反的顺序来排序。
    -t<分隔字符> 指定排序时所用的栏位分隔字符。
    +<起始栏位>-<结束栏位> 以指定的栏位来排序，范围由起始栏位到结束栏位的前一栏位。
    --help 显示帮助。
    --version 显示版本信息。

paste：将按行将不同文件行信息放在一行。缺省情况下， p a s t e连接时，用空格或t a b键分隔新行中不同文本，除非指定- d选项，它将成为域分隔符。
    paste 命令用于合并文件的列。
    paste 指令会把每个文件以列对列的方式，一列列地加以合并。
    语法
    paste [-s][-d <间隔字符>][--help][--version][文件...]
    参数：
    -d<间隔字符>或--delimiters=<间隔字符> 　用指定的间隔字符取代跳格字符。
    -s或--serial 　串列进行而非平行处理。
    --help 　在线帮助。
    --version 　显示帮助信息。
    [文件…] 指定操作的文件路径


二 实例应用：
1、 两个文件的交集、并集（前提条件：每个文件中不得有重复 也可以是多个文件）

(1)、取出两个文件的并集（重复的行只保留一份）
cat file1 file2 | sort | uniq > file3
或： sort a.txt b.txt | uniq

(2)、取出两个文件的交集（只留下同时存在于两个文件中的文件行内容，重复多次也只显示一次）
cat file1 file2 | sort | uniq -d > file3
或： sort a.txt b.txt | uniq -d

(3)、 删除交集，留下其他的行； 对称差，把两个文件放到一起排序，只输出出现一次的项：
cat file1 file2 | sort | uniq -u > file3  # 需要注意的是 file3 不能为file1、file2, 否则输出的file3的内容为空；
或：sort a.txt b.txt | uniq -u

(4)、 差集(A-B)，把B的元素重复2份和A的元素放到一起排序，只输出出现一次的项：
sort a.txt b.txt b.txt | uniq -u

2、两个文件合并

(1)、 一个文件在上，一个文件在下
cat file1 file2 > file3

(2)、 一个文件在左，一个文件在右
paste file1 file2 > file3

3、一个文件去掉重复的行

(1)、 重复的多行记为一行
sort file |uniq

(2)、 重复的行全部去掉
sort file |uniq -u

去重文件重复行，但保留原有的文件行内容的顺序
设输入文件是in.txt，命令如下：
cat -n in.txt | sort -k2,2 -k1,1n | uniq -f1 | sort -k1,1n | cut -f2-

命令解释:
cat -n in.txt : 输出文本，并在前面加上行号，以\t分隔
sort -k2,2 -k1,1n : 对输入内容排序，primary key是第二个字段，second key是第一个字段并且按数字大小排序
uniq -f1 : 忽略第一列，对文本进行去重，但输出时会包含第一列
sort -k1,1n : 对输入内容排序，key是第一个字段并按数字大小排序
cut -f2- : 输出第2列及之后的内容，默认分隔符为\t


