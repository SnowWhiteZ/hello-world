#!/usr/bin/python3
# coding: utf-8

# 词向量下载：
# wget -c -t 0 https://ai.tencent.com/ailab/nlp/data/Tencent_AILab_ChineseEmbedding.tar.gz
# 预训练的嵌入在Tencent_AILab_ChineseEmbedding.txt中。第一行显示嵌入的总数及其尺寸大小，以空格分隔。
# 在下面的每一行中，第一列表示中文单词或短语，后跟空格及其嵌入。对于每次嵌入，其在不同维度中的值由空格分隔。

# 腾讯AI Lab嵌入词汇表中有停用词（例如“的”和“是”），数字和标点符号（例如“，”和“。”）

from gensim.models import KeyedVectors

vec_file = '/home/gswyhq/data/Tencent_AILab_ChineseEmbedding/Tencent_AILab_ChineseEmbedding.txt'

wv_from_text = KeyedVectors.load_word2vec_format(vec_file, binary=False)

In [5]: wv_from_text.distance("篮球", "足球")
Out[5]: 0.34894001483917236

In [6]: wv_from_text.similar_by_word("篮球")
Out[6]:
[('篮球运动', 0.7085163593292236),
 ('nba', 0.6764324903488159),
 ('排球', 0.6742967367172241),
 ('nba篮球', 0.6654562950134277),
 ('热爱篮球', 0.6628175973892212),
 ('喜欢篮球', 0.6536414623260498),
 ('篮球训练', 0.652980387210846),
 ('足球', 0.6510599851608276),
 ('职业篮球', 0.6492007374763489),
 ('街球', 0.6488087177276611)]

In [7]: wv_from_text.similarity("篮球", "足球")
Out[7]: 0.65106

In [8]: wv_from_text.get_vector("篮球")
Out[8]:
array([ 0.064134, -0.015182,  0.124212, -0.073151,  0.216761,  0.065487,
        0.469856,  0.50252 ,  0.307141,  0.122729,  0.571241, -0.525943,
       -0.32713 ,  0.022879,  0.185074, -0.597391, -0.328496, -0.456861,
       -0.210146,  0.225039, -0.016655, -0.166572, -0.297374,  0.679695,
       -0.337887,  0.260944, -0.070625,  0.509652,  0.226215,  0.472286,
       -0.865331,  0.016483, -0.352174,  0.147178, -0.316414,  0.24449 ,
       -0.14751 ,  0.270786,  0.145389, -0.293672,  0.018286, -0.350389,
        0.672689, -0.025254,  0.124036, -0.657419, -0.178858, -0.849448,
       -0.201602, -0.689632, -0.430752,  0.002337, -0.495885, -0.355928,
        0.468082, -0.097622, -0.693868, -0.450494, -0.004429,  0.025093,
        0.190313,  0.613852,  0.084728, -0.131286, -0.635075, -0.532079,
        0.966547,  0.169866, -0.332812, -0.263435, -0.407607,  0.7965  ,
       -0.083206,  0.495186, -0.560693,  0.369992, -0.091765,  0.309639,
        0.495691,  0.748474,  0.441834, -0.460191,  0.039595,  0.33688 ,
        0.063877, -0.687294, -0.448005,  0.49765 , -0.832948,  0.494463,
        1.05824 , -0.040573, -0.595438, -0.415335, -0.366939, -0.452929,
        0.60095 , -0.061776, -0.663939, -0.292926,  0.25628 ,  0.493853,
       -0.868718,  0.029666, -0.561374,  0.288273, -0.153223, -0.540325,
        0.180863, -0.357196,  0.029725,  0.132288,  0.143961, -0.151034,
        0.281798, -0.053514, -0.480487, -0.100567, -0.297896, -0.146021,
        0.444018, -0.883495, -0.227433,  0.407057, -0.651091,  0.283777,
        0.733825,  0.350909,  0.537749,  0.469876,  0.791158, -0.305888,
        0.539112,  0.673776, -0.597255,  0.103394, -0.268728,  0.609922,
       -0.088729, -0.2603  , -0.204615,  0.008468, -0.06814 , -0.191978,
        0.589827, -0.90416 ,  0.596725, -0.373151, -0.098803, -0.229229,
        0.309837,  0.42897 , -0.019042, -0.055918,  0.553644,  0.081319,
        0.217404,  0.799535,  0.355664,  0.691473,  0.207125, -0.178691,
        0.547624,  0.843192,  1.123276,  0.245662, -0.501319,  0.921768,
       -0.082205, -0.179749, -0.753272, -0.531243, -0.156522,  0.06833 ,
        0.032223,  0.092043,  0.23614 , -0.43488 , -0.473784,  0.373987,
       -0.023968,  0.117272, -1.153109, -0.089103, -0.844083, -0.045052,
       -0.036178,  0.227418, -0.237863,  0.050852, -0.731526,  0.014497,
        0.381768,  0.109654, -0.100799, -0.057587, -0.102772, -0.340435,
        0.348117,  0.451429], dtype=float32)

In [9]: len(wv_from_text.wv.index2word)
Out[9]: 8824330

In [10]: wv_from_text.wv.index2word[:5]
Out[10]: ['</s>', '的', '。', ',', '了']

def main():
    pass


if __name__ == '__main__':
    main()

# gswyhq@gswyhq-PC:~/data/Tencent_AILab_ChineseEmbedding$ head -n 5 Tencent_AILab_ChineseEmbedding.txt
# 8824330 200
# </s> 0.002001 0.002210 -0.001915 -0.001639 0.000683 ... 0.000099 -0.000843 -0.000563
# 的 0.209092 -0.165459 -0.058054 0.281176 0.102982 ... -0.278624 -0.173408 0.035439
# 。 0.128825 -0.267995 0.000795 0.263639 0.097538 ... -0.286896 -0.273779 0.031194
# , -0.098885 -0.335186 -0.092543 0.145954 0.062586 ... -0.322631 -0.299947 0.179642
