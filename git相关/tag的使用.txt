
tag的使用

当我们发布给测试发布测试包时，为了不影响我们的开发进度，又不另起branch，我们就需要使用tag了，
基于tag可以很方便的进行新建branch操作等各种代码追踪操作。 

1）新建tag：
	git tag -a 'release_1.1' -m 'tag code'

2）push到服务器
	git push origin tag release_1.1

	git push不会推送标签（tag），除非使用--tags选项。
	$ git push origin --tags

3）同步远程的某个tag到本地
	$ git fetch origin tag release1.1.3.170225

	同步远程某个tag到本地：
	gswewf@gswewf-pc:~/new-ambbr-ai/ambbr$ git fetch origin tag release1.1.3.170225
	Enter passphrase for key '/home/gswewf/.ssh/id_rsa':
	remote: Counting objects: 6, done.
	remote: Compressing objects: 100% (6/6), done.
	remote: Total 6 (delta 5), reused 0 (delta 0)
	展开对象中: 100% (6/6), 完成.
	来自 172.26.1.167:ai/new-ambbr-ai
	 * [新标签]          release1.1.3.170225 -> release1.1.3.170225
	 * [新标签]          beta0.1.17021501 -> beta0.1.17021501
	 * [新标签]          beta0.1.17021801 -> beta0.1.17021801
	 * [新标签]          beta0.1.17022001 -> beta0.1.17022001
	 * [新标签]          beta0.1.17022101 -> beta0.1.17022101
	 * [新标签]          beta0.1.17022201 -> beta0.1.17022201
	 * [新标签]          beta0.1.17022401 -> beta0.1.17022401
	 * [新标签]          beta0.1.17022501 -> beta0.1.17022501
	 * [新标签]          release1.1.1.170225 -> release1.1.1.170225
	 * [新标签]          release1.1.2.170225 -> release1.1.2.170225

4）同步远程所有tag到本地
	gswewf@gswewf-pc:~/yhb$ git fetch --tags

5）查看tag
	查看本地的tag
	gswewf@gswewf-pc:~/new-ambbr-ai/ambbr$ git tag
	beta0.1.161121
	beta0.1.161123

    查看本地tag的详细信息：
    gswewf@gswewf-pc:~/yhb$ git tag -n
    alpha0.0.1.170413 问句与模板匹配算法切换到词向量前的较稳定版本
    alpha0.0.1.170420 服务器上20170420运行的版本

	查看远程的tag
	gswewf@gswewf-pc:~/new-ambbr-ai/ambbr$ git ls-remote --tags origin
	Enter passphrase for key '/home/gswewf/.ssh/id_rsa':
	08b236d71c6c0610725cc353244584b6fa2552a4	refs/tags/beta0.1.161121
	4a598200e26aa44430fbfa01ebcd4c80d9af4560	refs/tags/beta0.1.161121^{}
	d676f05c4c4d22fbbded524fb1ca732e550eea01	refs/tags/beta0.1.161123
	ae2ff5289039d8e7e82a00c6a98235ca1a07254c	refs/tags/release1.1.1.170225
	043c7e803cf3d12e1f0517b8b54080d4e8661fcd	refs/tags/release1.1.2.170225
	6bc6f7f848c10d68d8349986207ded6eae893d00	refs/tags/release1.1.3.170225

	#查询远程heads和tags的命令如下：
	git ls-remote --heads origin
	git ls-remote --tags origin
	git ls-remote origin

	查看tag日志：
	git log --oneline --decorate

6）删除tag
	git tag -d release_1.1

	删除远程分支：
	$ git push origin --delete <branchName>
	删除远程tag这么用：
	git push origin --delete tag <tagname>
	否则，可以使用这种语法，推送一个空分支到远程分支，其实就相当于删除远程分支：
	git push origin :<branchName>

	一次删除多个远程tag:
	gswewf@gswewf-pc:~$ git push origin -d alpha0.0.1.170324 alpha0.0.1.170328
	Enter passphrase for key '/home/gswewf/.ssh/id_rsa':
	To 192.168.3.101:web1/chat_bot_demo.git
	 - [deleted]         alpha0.0.1.170324
	 - [deleted]         alpha0.0.1.170328

	这是删除本地tag的方法：
	git tag -d <tagname>

	一次删除多个本地tag:
	gswewf@gswewf-pc:~$ git tag
	alpha0.0.1.170322
	alpha0.0.1.170323
	alpha0.0.1.170324
	alpha0.0.1.170328
	alpha0.0.1.170413
	alpha0.0.1.170420
	gswewf@gswewf-pc:~$ git tag -d alpha0.0.1.170322 alpha0.0.1.170323 alpha0.0.1.170324 alpha0.0.1.170328
	已删除标签 'alpha0.0.1.170322'（曾为 c1e9b91）
	已删除标签 'alpha0.0.1.170323'（曾为 c079797）
	已删除标签 'alpha0.0.1.170324'（曾为 4bd6022）
	已删除标签 'alpha0.0.1.170328'（曾为 6a51569）

	推送一个空tag到远程tag：
	git push origin :refs/tags/<tagname>
	两种语法作用完全相同。

# 更新tag的提交信息：
# 创建一个tag，并写上标注信息
gswewf@gswewf-PC:~/yhb$ git tag -a zhongan_neo4j_20171120 -m "20171120稳定版本，无上传文档功能"
# 发现标注信息不怎么好，更新一些标注信息
gswewf@gswewf-PC:~/yhb$ git tag zhongan_neo4j_20171120 zhongan_neo4j_20171120 -f -m "众安航延险图谱展示，20171120稳定版本，无上传文档功能"
已更新标签 'zhongan_neo4j_20171120'（曾为 08178c6）

# 重命名tag名（先建一个tag的别名，再删除旧的tag名）
git tag new_tag_name old_tag_name
git tag -d old_tag_name

# 更新tag名及提交的信息：
git tag zhongan_hangyangxian_neo4j_20171124 zhongan_hangyangxian_neo4j -f -m "众安航延险知识图谱展示，支持6个特定Word文档条款上传后进行对应的问答, 20171124版本"

# 重命名tag；rename a tag old to new:
git tag new old
git tag -d old

